// Generated by CoffeeScript 1.3.3
/*
  QuoDatePicker
  (c) 2011, 2012 IÃ±igo Gonzalez Vazquez (@haas85)
  http://ingonza.com
*/

var quoTimePicker;

quoTimePicker = (function(quo) {
  var changeTime, init, launcherInput, onButtonTap, onFieldTap, pad, removePicker, setPosition, setSize, setTime, showTimePicker, unpad, widthChange;
  launcherInput = {};
  window.mq = {};
  init = function() {
    var mq;
    quo('input.quoTimePicker').tap(onFieldTap);
    window.quomobile = false;
    if (matchMedia) {
      mq = window.matchMedia("(max-width: 980px)");
      mq.addListener(widthChange);
      return widthChange(mq);
    }
  };
  widthChange = function(mq) {
    if (mq.matches) {
      return window.quomobile = true;
    } else {
      return window.quomobile = false;
    }
  };
  showTimePicker = function(input) {
    var accept, picker, re, tbuttons;
    launcherInput = input;
    removePicker();
    picker = document.createElement('div');
    picker.id = "quoTimePicker";
    picker.innerHTML = '<div class="tcontainer"><div class="hcontainer"><p id="plush" class="plustime timebutton">+</p><input class="thours timeinput" size="2" maxlength="2" type="number" max="23" min="00" format="[0-9]*"/><span>:</span><div style="clear:both;"></div><p id="minush" class="minustime timebutton">-</p></div><div class="mcontainer"><p id="plusm" class="plustime timebutton">+</p><input class="tminutes timeinput" size="2" maxlength="2" type="number" max="59" min="00" pattern="[0-9]*"/><div style="clear:both;"></div><p id="minusm" class="minustime timebutton">-</p></div><div class="accept">OK</div></div>';
    input.parentNode.insertBefore(picker, input.nextSibling);
    setSize();
    setPosition(input);
    tbuttons = quo('.timebutton');
    accept = quo('.accept');
    tbuttons.off('tap');
    accept.off('tap');
    tbuttons.on('tap', onButtonTap);
    accept.on('tap', setTime);
    re = new RegExp("[0-9][0-9]:[0-9][0-9]", "i");
    if (!input.value.match(re)) {
      quo('.thours')[0].value = 0;
      return quo('.tminutes')[0].value = 0;
    } else {
      quo('.thours')[0].value = unpad(input.value.split(":")[0]);
      return quo('.tminutes')[0].value = unpad(input.value.split(":")[1]);
    }
  };
  setSize = function() {
    var buttonwidth, containerWidth, inputwidth;
    if (!window.quomobile) {
      buttonwidth = (350 / 2) - 3;
      inputwidth = buttonwidth - 20;
      quo('.timebutton').style('width', "" + buttonwidth + "px");
      return quo('input.timeinput').style('width', "" + inputwidth + "px");
    } else {
      containerWidth = Quo.environment().screen.width / 2;
      $$('.tcontainer').style('width', "" + containerWidth + "px");
      buttonwidth = (containerWidth / 2) - 3;
      $$('.timebutton').style('width', "" + buttonwidth + "px");
      return $$('input.timeinput').style('width', "" + (buttonwidth - 20) + "px");
    }
  };
  setPosition = function(input) {
    var bgr, bodywidth, margLeft, margTop, pickerwidth, pickwin;
    bgr = quo('#quoTimePicker');
    if (window.quomobile) {
      pickwin = bgr.children('.tcontainer');
      pickwin.style('margin-left', "" + ((bgr[0].offsetWidth - pickwin[0].offsetWidth) / 2) + "px");
      return pickwin.style('margin-top', "" + ((bgr[0].offsetHeight - pickwin[0].offsetHeight) / 2) + "px");
    } else {
      margLeft = input.offsetLeft;
      margTop = input.offsetTop;
      bodywidth = quo('body')[0].offsetWidth;
      pickerwidth = quo('#quoTimePicker .tcontainer')[0].offsetWidth;
      if (margLeft + pickerwidth < bodywidth) {
        return bgr.style('margin-left', "" + margLeft + "px");
      } else {
        return bgr.style('margin-left', "" + (bodywidth - pickerwidth) + "px");
      }
    }
  };
  onFieldTap = function() {
    return showTimePicker(this);
  };
  onButtonTap = function() {
    var id;
    id = this.id;
    switch (id) {
      case "plush":
        return changeTime("PLUS", quo('.thours')[0], 23);
      case "minush":
        return changeTime("MINUS", quo('.thours')[0], 23);
      case "plusm":
        return changeTime("PLUS", quo('.tminutes')[0], 59);
      case "minusm":
        return changeTime("MINUS", quo('.tminutes')[0], 59);
    }
  };
  changeTime = function(action, elem, maxval) {
    if (action === "PLUS") {
      if (elem.value < maxval) {
        return elem.value++;
      } else {
        return elem.value = 0;
      }
    } else {
      if (action === "MINUS") {
        if (elem.value > 0) {
          return elem.value--;
        } else {
          return elem.value = maxval;
        }
      }
    }
  };
  pad = function(num) {
    var str;
    str = '' + num;
    while (str.length !== 2) {
      str = '0' + str;
    }
    return str;
  };
  unpad = function(num) {
    if (num[0] === '0') {
      return num[1];
    } else {
      return num;
    }
  };
  setTime = function() {
    var hours, minutes;
    hours = quo('.thours')[0];
    minutes = quo('.tminutes')[0];
    if (!isNaN(hours.value && hours.value !== "" && !isNaN(minutes.value && minutes.value !== ""))) {
      launcherInput.value = "" + (pad(hours.value)) + ":" + (pad(minutes.value));
      return removePicker();
    }
  };
  removePicker = function() {
    var prev;
    prev = document.querySelectorAll('#quoTimePicker');
    if (prev.length !== 0) {
      return prev[0].parentNode.removeChild(prev[0]);
    }
  };
  return {
    init: init
  };
})(Quo);

quoTimePicker.init();
